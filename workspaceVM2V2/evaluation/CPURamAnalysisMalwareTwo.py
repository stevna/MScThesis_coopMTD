import psutil
import time
import subprocess
import telnetlib
import socket
import signal
import threading




serverIP = '192.168.1.10'
serverPort = 23
serverTries = 0
serverFails = 0
serverFailTime = 0
serverStartTime = time.time()


localPort = 23
localTries = 0
localFails = 0
localFailTime = 0
localStartTime = time.time()
count = 0

proc = subprocess.Popen(["/bin/bash", "/home/MalwareTwo/workspace/evaluation/stopTimeOfClient.sh"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
proc = subprocess.Popen(["/bin/bash", "/home/MalwareTwo/workspace/evaluation/sendPacketsToServer.sh"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

print(proc)

#deleting the content of the file
with open("/home/MalwareTwo/workspace/evaluation/CPURamAnalysisMalwareTwo.txt", "w") as file:
    pass

def checkProc(proc_name):
    for proc in psutil.process_iter():
        try:
            if proc_name.lower() == proc.name().lower():
                print(proc_name.lower())
                print(proc.name().lower())
                return True
        except psutil.NoSuchProcess:
            pass
    return False
    

while True:
    with open("/home/MalwareTwo/workspace/evaluation/CPURamAnalysisMalwareTwo.txt", "a") as file:
        if count == 0:
            file.write("time,")
            file.write("CPUPerc,")
            file.write("RAMPerc,")
            file.write("RAMAvailable,")
            file.write("RAMTotal,")
            file.write("BashliteActive\n")
            
        
        file.write(time.strftime("%H:%M:%S")+",")
        file.write(f"{psutil.cpu_percent(1)},")
        file.write(f"{psutil.virtual_memory().percent},")
        file.write(f"{psutil.virtual_memory().available},")
        file.write(f"{psutil.virtual_memory().total},")
        if(checkProc("client")):
            file.write("True\n")
        else:
            file.write("False\n")
            
       

        count+=1    
    time.sleep(1)

